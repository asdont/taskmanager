basePath: /api
definitions:
  handler.HTTPError:
    properties:
      comment:
        type: string
      error:
        type: string
    type: object
  handler.createTaskBody:
    properties:
      title:
        example: some title
        type: string
    required:
    - title
    type: object
  handler.createTaskResult:
    properties:
      taskId:
        type: integer
    type: object
  handler.createUserBody:
    properties:
      password:
        example: newuser
        type: string
      username:
        example: newuser
        type: string
    required:
    - password
    - username
    type: object
  handler.createUserResult:
    properties:
      userId:
        type: integer
    type: object
  handler.deleteTasksResult:
    properties:
      quantity:
        type: integer
    type: object
  handler.updateTaskBody:
    properties:
      completed:
        example: true
        type: boolean
      title:
        example: some new title
        type: string
    type: object
  model.Task:
    properties:
      completed:
        type: string
      created:
        type: string
      id:
        type: integer
      status:
        type: boolean
      title:
        type: string
      updated:
        type: string
    type: object
host: 127.0.0.1:45222
info:
  contact:
    email: example@mail.com
    name: Example
    url: https://example.com/
  title: API Task Manager
  version: "1.0"
paths:
  /v1/manage/user:
    post:
      consumes:
      - application/json
      parameters:
      - description: manage auth - admin:admin; username(3-20); password(5-20)
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/handler.createUserBody'
      produces:
      - application/json
      responses:
        "201":
          description: userId
          schema:
            $ref: '#/definitions/handler.createUserResult'
        "400":
          description: error type, comment
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "401":
          description: Unauthorized
        "500":
          description: error type, comment
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: create new user(manage auth - admin:admin)
      tags:
      - management
  /v1/task:
    post:
      consumes:
      - application/json
      parameters:
      - description: title - max 200
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/handler.createTaskBody'
      produces:
      - application/json
      responses:
        "201":
          description: taskId
          schema:
            $ref: '#/definitions/handler.createTaskResult'
        "400":
          description: error type, comment
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "401":
          description: Unauthorized
        "500":
          description: error type, comment
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: create new task
      tags:
      - task
  /v1/task/{taskId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: taskId
        in: path
        minimum: 1
        name: taskId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: error type, comment
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "401":
          description: Unauthorized
        "500":
          description: error type, comment
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: delete task
      tags:
      - task
    get:
      consumes:
      - application/json
      parameters:
      - description: taskId
        in: path
        minimum: 1
        name: taskId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Task'
        "400":
          description: error type, comment
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "401":
          description: Unauthorized
        "500":
          description: error type, comment
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: get task
      tags:
      - task
    put:
      consumes:
      - application/json
      parameters:
      - description: taskId
        in: path
        minimum: 1
        name: taskId
        required: true
        type: integer
      - description: any of the fields
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/handler.updateTaskBody'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: error type, comment
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "401":
          description: Unauthorized
        "500":
          description: error type, comment
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: update task
      tags:
      - task
  /v1/tasks:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.deleteTasksResult'
        "401":
          description: Unauthorized
        "500":
          description: error type, comment
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: delete tasks
      tags:
      - tasks
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Task'
            type: array
        "401":
          description: Unauthorized
        "500":
          description: error type, comment
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: get tasks
      tags:
      - tasks
schemes:
- http
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
